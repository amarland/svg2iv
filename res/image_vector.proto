syntax = "proto3";

package svg2iv.protobuf;

message ImageVectorCollection {
  repeated NullableImageVector nullable_image_vectors = 1;
}

message NullableImageVector {
  oneof value_or_nothing {
    ImageVector value = 1;
    Null nothing = 2;
  }
}

enum Null {NOTHING = 0;}

message ImageVector {
  repeated VectorNode nodes = 1;
  string name = 2;
  float viewport_width = 3;
  float viewport_height = 4;
  float width = 5;
  float height = 6;
}

message VectorNode {
  oneof node {
    VectorGroup group = 1;
    VectorPath path = 2;
  }
}

message VectorGroup {
  repeated VectorNode nodes = 1;
  string id = 2;
  float rotation = 3;
  float pivot_x = 4;
  float pivot_y = 5;
  float scale_x = 6;
  float scale_y = 10;
  float translation_x = 7;
  float translation_y = 8;
  repeated PathNode clip_path_data = 9;
}

message VectorPath {
  repeated PathNode path_nodes = 1;
  string id = 2;
  Brush fill = 3;
  float fill_alpha = 4;
  Brush stroke = 5;
  float stroke_alpha = 6;
  float stroke_line_width = 7;
  StrokeCap stroke_line_cap = 9;
  StrokeJoin stroke_line_join = 10;
  float stroke_line_miter = 11;
  FillType fill_type = 8;

  enum StrokeCap {
    CAP_BUTT = 0;
    CAP_ROUND = 1;
    CAP_SQUARE = 2;
  }

  enum StrokeJoin {
    JOIN_MITER = 0;
    JOIN_ROUND = 1;
    JOIN_BEVEL = 2;
  }

  enum FillType {
    NON_ZERO = 0;
    EVEN_ODD = 1;
  }
}

message PathNode {
  Command command = 1;
  repeated Argument arguments = 2;

  enum Command {
    CLOSE = 0;
    MOVE_TO = 1;
    RELATIVE_MOVE_TO = 2;
    LINE_TO = 3;
    RELATIVE_LINE_TO = 4;
    HORIZONTAL_LINE_TO = 5;
    RELATIVE_HORIZONTAL_LINE_TO = 6;
    VERTICAL_LINE_TO = 7;
    RELATIVE_VERTICAL_LINE_TO = 8;
    CURVE_TO = 9;
    RELATIVE_CURVE_TO = 10;
    SMOOTH_CURVE_TO = 11;
    RELATIVE_SMOOTH_CURVE_TO = 12;
    QUADRATIC_BEZIER_CURVE_TO = 13;
    RELATIVE_QUADRATIC_BEZIER_CURVE_TO = 14;
    SMOOTH_QUADRATIC_BEZIER_CURVE_TO = 15;
    RELATIVE_SMOOTH_QUADRATIC_BEZIER_CURVE_TO = 16;
    ARC_TO = 17;
    RELATIVE_ARC_TO = 18;
  }

  message Argument {
    oneof argument {
      float coordinate = 1;
      bool flag = 2;
    }
  }
}

message Brush {
  oneof solid_color_or_gradient {
    uint32 solid_color = 1;
    Gradient linear_gradient = 2;
    Gradient radial_gradient = 3;
  }
}

message Gradient {
  repeated uint32 colors = 1;
  repeated float stops = 2;
  float start_x = 3;
  float start_y = 4;
  float end_x = 5;
  float end_y = 6;
  float center_x = 7;
  float center_y = 8;
  float radius = 9;
  TileMode tile_mode = 10;

  enum TileMode {
    CLAMP = 0;
    REPEATED = 1;
    MIRROR = 2;
  }
}
