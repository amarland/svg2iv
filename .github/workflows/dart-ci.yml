name: Dart CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
      - name: Check formatting
        run: >
          dart format --output=none --set-exit-if-changed ./cli/bin/ ./cli/lib/
          ./common/lib/ ./common/test/
          ./common_flutter/lib/ ./common_flutter/test/
          ./svg2iv_gui/lib/ ./svg2iv_gui/test/
          ./svg2iv_web/lib/ ./svg2iv_web/test/
        if: steps.install.outcome == 'success'
      - name: Analyze code
        run: >
          dart analyze ./cli/ && dart analyze ./common/ && dart analyze ./common_flutter/
          dart analyze ./svg2iv_gui/ && dart analyze ./svg2iv_web/
        if: steps.install.outcome == 'success'

  test:
    needs: analyze
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: flutter-actions/setup-flutter@v2
        with:
          channel: stable
          version: 3.10.6
      - uses: fwilhe2/setup-kotlin@main # needed for tests which rely on the Kotlin compiler
        with:
          version: 1.8.0
      - id: install
        name: Get dependencies
        run: >
          dart pub get -C common && cd ./common_flutter && flutter pub get &&
          cd ../svg2iv_gui && flutter pub get && cd ../svg2iv_web && flutter pub get
      - name: Run all tests in `common`
        run: cd ./common/ && dart test
        if: steps.install.outcome == 'success' && matrix.os == 'ubuntu-latest'
      - name: Run tests tagged with `include-windows` in `common`
        run: cd ./common/ && dart test -t include-windows
        if: steps.install.outcome == 'success' && matrix.os == 'windows-latest'
      - name: Run all tests in `common_flutter`
        run: cd ./common_flutter/ && flutter test
        if: steps.install.outcome == 'success' && matrix.os == 'ubuntu-latest'
      - name: Run all tests in `svg2iv_gui`
        run: cd ./svg2iv_gui/ && flutter test
        if: steps.install.outcome == 'success' && matrix.os == 'ubuntu-latest'
      - name: Run all tests in `svg2iv_web`
        run: cd ./svg2iv_web/ && flutter test
        if: steps.install.outcome == 'success' && matrix.os == 'ubuntu-latest'
